IF
	NumTimesTalkedTo(0)
	Detect([PC])
THEN
	RESPONSE #100
		SetGlobal("RR#Active","LOCALS",1)
		SetGlobalTimer("RR#Rest","LOCALS",2400) // 8 hours
		Shout(124)
		StartDialogueNoSet([PC])
END

IF
	Global("RR#Active","LOCALS",0)
	Heard([ANYONE],124)
THEN
	RESPONSE #100
		SetGlobal("RR#Active","LOCALS",1)
		SetGlobalTimer("RR#Rest","LOCALS",2400) // 8 hours
		Enemy()
		Shout(124)
END

IF
	Global("RR#Active","LOCALS",0)
        Allegiance(Myself,EVILCUTOFF)
	See([GOODCUTOFF])
THEN
	RESPONSE #100
		SetGlobal("RR#Active","LOCALS",1)
		SetGlobalTimer("RR#Rest","LOCALS",2400) // 8 hours
		Enemy()
		Shout(124)
END

IF
	Global("RR#Active","LOCALS",1)
	Global("RR#Cntg","LOCALS",0)
THEN
	RESPONSE #100
		SetGlobal("RR#Cntg","LOCALS",1)
		DisplayStringHead(Myself,25942) // Contingency
		ReallyForceSpell(Myself,WIZARD_STONE_SKIN)
		Continue()
END

IF
	OR(4)
	  Global("RR#Active","LOCALS",0)
          !Allegiance(Myself,EVILCUTOFF) // better way to check for charm because STATE_CHARMED persists when the creature is attacked and becomes red circled again
	  StateCheck(Myself,STATE_IMMOBILE) // using this instead of STATE_DISABLED because the latter includes STATE_CHARMED
	  StateCheck(Myself,STATE_REALLY_DEAD) // prevents contingencies and other ReallyForceSpell() stuff from popping up on dead creatures
THEN
	RESPONSE #100
		NoAction()
END

IF
	!GlobalTimerNotExpired("RR#Rest","LOCALS") // re-initialize the rest timer
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Rest","LOCALS",2400) // 8 hours
		SetGlobal("RR#Cntg","LOCALS",0) // reset Contingency variable
		SetGlobal("RR#Seq","LOCALS",0) // Spell Sequencer variable
		SetGlobal("RR#Trig","LOCALS",0) // reset Spell Trigger variable
		SetGlobal("RR#MSeq","LOCALS",0) // reset Minor Sequencer variable
                ApplySpell(Myself,RESTORE_FULL_HEALTH) // heal up
                Rest()
END

IF
	Global("RR#Active","LOCALS",1)
	!InActiveArea(Myself)
	!See([GOODCUTOFF])
THEN
	RESPONSE #100
		NoAction()
END

IF

	StateCheck(Myself,STATE_PANIC)  // needed because the AI can perform script actions (i.e. drink potions) while panicked, unlike the player
THEN
	RESPONSE #100
		RandomWalkContinuous() // using this instead of NoAction() because otherwise panicked characters would stand in place
END

IF
	!Detect([GOODCUTOFF])
	!ModalState(STEALTH)
	!Global("dvgldust","LOCALS",1)
	!StateCheck(Myself,STATE_BLIND)
	!GlobalTimerNotExpired("RR#HIDE","LOCALS")
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#HIDE","LOCALS",6)
		DisplayStringHead(Myself,@711) //  attempts to hide in shadows
		Hide()
		SetInterrupt(TRUE)
END

IF
        Global("RR#ZProt","LOCALS",0)
	OR(4)
	  StateCheck(Myself,STATE_MIRRORIMAGE)
	  CheckStat(Myself,1,PUPPETTYPE) // Mislead
          CheckStatGT(Myself,0,STONESKINS)
	  CheckStatGT(Myself,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)
THEN
	RESPONSE #100
        	SetGlobal("RR#ZProt","LOCALS",1)
END

IF
        Global("RR#ZProt","LOCALS",1)
	!StateCheck(Myself,STATE_MIRRORIMAGE)
	!CheckStat(Myself,1,PUPPETTYPE) // Mislead
        !CheckStatGT(Myself,0,STONESKINS)
	!CheckStatGT(Myself,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)
THEN
	RESPONSE #100
        	SetGlobal("RR#ZProt","LOCALS",0)
END

IF
        !Global("RR#ZProt","LOCALS",2)
	!HaveSpell(WIZARD_MIRROR_IMAGE)
	!HaveSpell(WIZARD_STONE_SKIN)
	!HasItem("SCRL7O",Myself) // Protection From Magic Weapons
THEN
	RESPONSE #100
        	SetGlobal("RR#ZProt","LOCALS",2)
END

IF
	Global("RR#Trig","LOCALS",0)
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	DifficultyGT(EASY)
	Global("fl#RRNoMislead","GLOBAL",0)
THEN
	RESPONSE #100
		SetGlobal("RR#Trig","LOCALS",1)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		SetSequence(SEQ_CAST) // Displays the proper casting animation (for cosmetic purposes)
		DisplayStringHead(Myself,26243) // Spell Trigger
		ReallyForceSpell(Myself,CLERIC_TRUE_SIGHT)
		ReallyForceSpell(Myself,WIZARD_MISLEAD)
		ReallyForceSpell(Myself,WIZARD_IMPROVED_HASTE)
		UseItem("POTN21",Myself) // Potion of Clarity Note: this potion is actually supposed to be used before the battle (simulates prep. sequence)
END

IF
	Global("RR#Trig","LOCALS",0)
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	OR(2)
		DifficultyLT(NORMAL)
		!Global("fl#RRNoMislead","GLOBAL",0)
THEN
	RESPONSE #100
		SetGlobal("RR#Trig","LOCALS",1)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		SetSequence(SEQ_CAST) // Displays the proper casting animation (for cosmetic purposes)
		DisplayStringHead(Myself,26243) // Spell Trigger
		ReallyForceSpell(Myself,CLERIC_TRUE_SIGHT)
		ReallyForceSpell(Myself,WIZARD_IMPROVED_INVISIBILITY)
		ReallyForceSpell(Myself,WIZARD_IMPROVED_HASTE)
		UseItem("POTN21",Myself) // Potion of Clarity Note: this potion is actually supposed to be used before the battle (simulates prep. sequence)
END

IF
	Global("RR#Msld","LOCALS",0)
	Detect([EVILCUTOFF.HUMANOID.HUMAN.MAGE_THIEF.0.ILLUSIONARY.NEUTRAL])
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobal("RR#Msld","LOCALS",1)
		ActionOverride(LastSeenBy(Myself),MoveToPointNoInterrupt([5053.2105]))
		ActionOverride(LastSeenBy(Myself),ChangeAIScript("RR#MSLD",OVERRIDE))
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	DifficultyGT(EASY)
	Global("fl#RRNoMislead","GLOBAL",0)
	!CheckStat(Myself,1,PUPPETTYPE) // Mislead
	!Global("dvgldust","LOCALS",1)
	HasItem("SCRL7K",Myself) // Mislead
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!CheckStatGT(Player1,0,TRUE_SIGHT)
	!CheckStatGT(Player2,0,TRUE_SIGHT)
	!CheckStatGT(Player3,0,TRUE_SIGHT)
	!CheckStatGT(Player4,0,TRUE_SIGHT)
	!CheckStatGT(Player5,0,TRUE_SIGHT)
	!CheckStatGT(Player6,0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.PLANATAR],0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.DARKPLANATAR],0,TRUE_SIGHT)
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		SetGlobal("RR#Msld","LOCALS",0)
		DestroyItem("SCRL7K") // Mislead
		DisplayStringHead(Myself,46153) // uses a scroll
		SpellNoDec(Myself,WIZARD_MISLEAD) // spells cast from scrolls should be disruptable as per PnP rules
		SetInterrupt(TRUE)
END

IF
	Global("RR#Heal","LOCALS",1)
	OR(2)
	  HPPercentGT(Myself,84)
	  !HasItem("POTN52",Myself) // Potion of Extra Healing
THEN
	RESPONSE #100
		SetGlobal("RR#Heal","LOCALS",0)
END

IF
	HPPercentLT(Myself,85)
	Global("RR#Heal","LOCALS",0)
	HasItem("POTN52",Myself) // Potion of Extra Healing
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobal("RR#Heal","LOCALS",1)
		SetInterrupt(TRUE)
END

IF
	Global("RR#Heal","LOCALS",1)
	!StateCheck(Myself,STATE_INVISIBLE)
	!Global("dvgldust","LOCALS",1)
	HasItem("POTN10",Myself) // Potion of Invisibility
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	!CheckStatGT(Player1,0,TRUE_SIGHT)
	!CheckStatGT(Player2,0,TRUE_SIGHT)
	!CheckStatGT(Player3,0,TRUE_SIGHT)
	!CheckStatGT(Player4,0,TRUE_SIGHT)
	!CheckStatGT(Player5,0,TRUE_SIGHT)
	!CheckStatGT(Player6,0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.PLANATAR],0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.DARKPLANATAR],0,TRUE_SIGHT)
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		UseItem("POTN10",Myself) // Potion of Invisibility
		DisplayStringHead(Myself,46150) //  quaffs a potion
		SetInterrupt(TRUE)
END

IF
	Global("RR#Heal","LOCALS",1)
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HasItem("POTN52",Myself) // Potion of Extra Healing
	HPPercentLT(Myself,85)
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		UseItem("POTN52",Myself) // Potion of Extra Healing
		DisplayStringHead(Myself,46150) //  quaffs a potion
		SetInterrupt(TRUE)
END

IF
	!StateCheck(Myself,STATE_INVISIBLE)
	!Global("dvgldust","LOCALS",1)
        Global("RR#ZProt","LOCALS",0)
	HasItem("POTN10",Myself) // Potion of Invisibility
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	!GlobalTimerNotExpired("RR#ZBuff","LOCALS")
	!CheckStatGT(Player1,0,TRUE_SIGHT)
	!CheckStatGT(Player2,0,TRUE_SIGHT)
	!CheckStatGT(Player3,0,TRUE_SIGHT)
	!CheckStatGT(Player4,0,TRUE_SIGHT)
	!CheckStatGT(Player5,0,TRUE_SIGHT)
	!CheckStatGT(Player6,0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.PLANATAR],0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.DARKPLANATAR],0,TRUE_SIGHT)
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		SetGlobalTimer("RR#ZBuff","LOCALS",19)
		UseItem("POTN10",Myself) // Potion of Invisibility
		DisplayStringHead(Myself,46150) //  quaffs a potion
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	Global("RR#Heal","LOCALS",0)
	CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!CheckStatGT(Myself,0,PUPPETTYPE) // Mislead, etc.
        !CheckStatGT(Myself,0,STONESKINS)
	!CheckStatGT(Myself,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)
	HasItem("POTN33",Myself) // Potion of Magic Blocking
	!Difficulty(EASIEST)
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		UseItem("POTN33",Myself) // Potion of Magic Blocking
		DisplayStringHead(Myself,46150) //  quaffs a potion
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	!CheckStatGT(Myself,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)
	OR(3)
	  CheckStatLT(Myself,1,STONESKINS)
	  AttackedBy([ANYONE],DEFAULT)
	  Range([GOODCUTOFF],4)
	HaveSpell(WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Myself,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)
END

IF
	Global("RR#Seq","LOCALS",0)
	OR(2)
	  !CheckStat(Myself,1,PUPPETTYPE)
	  RandomNum(3,1)
	!Difficulty(EASIEST)
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
THEN
	RESPONSE #100
		SetGlobal("RR#Seq","LOCALS",1)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		SetSequence(SEQ_CAST) // Displays the proper casting animation (for cosmetic purposes)
		DisplayStringHead(Myself,25951) // Spell Sequencer
		ReallyForceSpell(Myself,WIZARD_FIRE_SHIELD_RED)
		ReallyForceSpell(Myself,WIZARD_MINOR_GLOBE_OF_INVULNERABILITY)
		ReallyForceSpell(Myself,WIZARD_MINOR_SPELL_DEFLECTION)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	CheckStatLT(Myself,1,STONESKINS)
	HaveSpell(WIZARD_STONE_SKIN)
	OR(2)
	  !CheckStatGT(Myself,0,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)
	  RandomNum(4,1)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Myself,WIZARD_STONE_SKIN)
END

IF
	Global("RR#MSeq","LOCALS",0)
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	!StateCheck(Myself,STATE_MIRRORIMAGE)
	!StateCheck(Myself,STATE_BLUR)
	OR(2)
	  !CheckStat(Myself,1,PUPPETTYPE)
	  RandomNum(5,1)
	!CheckStatGT(Player1,0,TRUE_SIGHT)
	!CheckStatGT(Player2,0,TRUE_SIGHT)
	!CheckStatGT(Player3,0,TRUE_SIGHT)
	!CheckStatGT(Player4,0,TRUE_SIGHT)
	!CheckStatGT(Player5,0,TRUE_SIGHT)
	!CheckStatGT(Player6,0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.PLANATAR],0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.DARKPLANATAR],0,TRUE_SIGHT)
THEN
	RESPONSE #100
		SetGlobal("RR#MSeq","LOCALS",1)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		SetSequence(SEQ_CAST) // Displays the proper casting animation (for cosmetic purposes)
		DisplayStringHead(Myself,5013) // Minor Sequencer
		ReallyForceSpell(Myself,WIZARD_BLUR)
		ReallyForceSpell(Myself,WIZARD_MIRROR_IMAGE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	!StateCheck(Myself,STATE_NOT_TARGETABLE)
	!CheckStat(Myself,1,PUPPETTYPE) // Mislead
	!Global("dvgldust","LOCALS",1)
	HasItem("SCRL7K",Myself) // Mislead
  	OR(2)
  		DifficultyLT(NORMAL) // on lower difficulty settings use Shadow Door scrolls instead of Mislead scrolls
        	!Global("fl#RRNoMislead","GLOBAL",0)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!StateCheck(Myself,STATE_SILENCED)
	!CheckStatGT(Player1,0,TRUE_SIGHT)
	!CheckStatGT(Player2,0,TRUE_SIGHT)
	!CheckStatGT(Player3,0,TRUE_SIGHT)
	!CheckStatGT(Player4,0,TRUE_SIGHT)
	!CheckStatGT(Player5,0,TRUE_SIGHT)
	!CheckStatGT(Player6,0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.PLANATAR],0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.DARKPLANATAR],0,TRUE_SIGHT)
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		DestroyItem("SCRL7K") // Mislead
		DisplayStringHead(Myself,46153) // uses a scroll
		SpellNoDec(Myself,WIZARD_SHADOW_DOOR) // spells cast from scrolls should be disruptable as per PnP rules
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	!StateCheck(Myself,STATE_NOT_TARGETABLE)
	!CheckStat(Myself,1,PUPPETTYPE) // Mislead
	!Global("dvgldust","LOCALS",1)
	HaveSpell(WIZARD_SHADOW_DOOR)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!CheckStatGT(Player1,0,TRUE_SIGHT)
	!CheckStatGT(Player2,0,TRUE_SIGHT)
	!CheckStatGT(Player3,0,TRUE_SIGHT)
	!CheckStatGT(Player4,0,TRUE_SIGHT)
	!CheckStatGT(Player5,0,TRUE_SIGHT)
	!CheckStatGT(Player6,0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.PLANATAR],0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.DARKPLANATAR],0,TRUE_SIGHT)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Myself,WIZARD_SHADOW_DOOR)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	!StateCheck(Myself,STATE_MIRRORIMAGE)
	HaveSpell(WIZARD_MIRROR_IMAGE)
	!CheckStat(Myself,1,PUPPETTYPE)
	OR(2)
	  StateCheck(Myself,STATE_INVISIBLE)
	  RandomNum(2,1)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!CheckStatGT(Player1,0,TRUE_SIGHT)
	!CheckStatGT(Player2,0,TRUE_SIGHT)
	!CheckStatGT(Player3,0,TRUE_SIGHT)
	!CheckStatGT(Player4,0,TRUE_SIGHT)
	!CheckStatGT(Player5,0,TRUE_SIGHT)
	!CheckStatGT(Player6,0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.PLANATAR],0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.DARKPLANATAR],0,TRUE_SIGHT)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Myself,WIZARD_MIRROR_IMAGE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_DISPEL_MAGIC)
	!See([GOODCUTOFF])
	Detect([GOODCUTOFF])
	CheckStatLT(LastSeenBy(Myself),100,STEALTH)
	!StateCheck(LastSeenBy(Myself),STATE_SILENCED)
	OR(2)
	  HasItemEquipedReal("STAF11",LastSeenBy(Myself)) // Staff of the Magi +5
          CheckStatGT(LastSeenBy(Myself),0,SANCTUARY)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		MoveToObject(LastSeenBy(Myself))
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Myself,WIZARD_DISPEL_MAGIC)
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_DISPEL_MAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!StateCheck(Myself,STATE_SILENCED)
	See([GOODCUTOFF.0.MIST.0.0.SUMMONED])
	OR(2)
	  HasItem("NISHRUU",LastSeenBy(Myself)) // Nishruu or Hakeashar (unmodded game)
	  HasItem("HAKSU",LastSeenBy(Myself)) // Spell Revisions' Hakeashar
	!StateCheck(Player1,STATE_DISABLED)
	!StateCheck(Player2,STATE_DISABLED)
	!StateCheck(Player3,STATE_DISABLED)
	!StateCheck(Player4,STATE_DISABLED)
	!StateCheck(Player5,STATE_DISABLED)
	!StateCheck(Player6,STATE_DISABLED)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_DISPEL_MAGIC)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_DISPEL_MAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!StateCheck(Player1,STATE_NOT_TARGETABLE)
	!StateCheck(Player1,STATE_DISABLED)
	!StateCheck(Player2,STATE_DISABLED)
	!StateCheck(Player3,STATE_DISABLED)
	!StateCheck(Player4,STATE_DISABLED)
	!StateCheck(Player5,STATE_DISABLED)
	!StateCheck(Player6,STATE_DISABLED)
	See(Player1)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL2)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL3)
	OR(11)
	  StateCheck(LastSeenBy(Myself),STATE_HASTED)
	  StateCheck(LastSeenBy(Myself),STATE_MIRRORIMAGE)
	  CheckStatGT(LastSeenBy(Myself),0,TRUE_SIGHT)
	  CheckStatGT(LastSeenBy(Myself),0,STONESKINS)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_DEFENSIVE_HARMONY)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_FIRE_SHIELD)
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE5) // Barkskin, Wizard Shield, Wizard Armor, Ghost Armor, Spirit Armor
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE6) // Divine Power, Strength of One, Wizard Strength, Holy Power...
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_DISPEL_MAGIC)
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_DISPEL_MAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!StateCheck(Player2,STATE_NOT_TARGETABLE)
	!StateCheck(Player1,STATE_DISABLED)
	!StateCheck(Player2,STATE_DISABLED)
	!StateCheck(Player3,STATE_DISABLED)
	!StateCheck(Player4,STATE_DISABLED)
	!StateCheck(Player5,STATE_DISABLED)
	!StateCheck(Player6,STATE_DISABLED)
	See(Player2)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL2)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL3)
	OR(11)
	  StateCheck(LastSeenBy(Myself),STATE_HASTED)
	  StateCheck(LastSeenBy(Myself),STATE_MIRRORIMAGE)
	  CheckStatGT(LastSeenBy(Myself),0,TRUE_SIGHT)
	  CheckStatGT(LastSeenBy(Myself),0,STONESKINS)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_DEFENSIVE_HARMONY)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_FIRE_SHIELD)
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE5) // Barkskin, Wizard Shield, Wizard Armor, Ghost Armor, Spirit Armor
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE6) // Divine Power, Strength of One, Wizard Strength, Holy Power...
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_DISPEL_MAGIC)
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_DISPEL_MAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!StateCheck(Player3,STATE_NOT_TARGETABLE)
	!StateCheck(Player1,STATE_DISABLED)
	!StateCheck(Player2,STATE_DISABLED)
	!StateCheck(Player3,STATE_DISABLED)
	!StateCheck(Player4,STATE_DISABLED)
	!StateCheck(Player5,STATE_DISABLED)
	!StateCheck(Player6,STATE_DISABLED)
	See(Player3)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL2)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL3)
	OR(11)
	  StateCheck(LastSeenBy(Myself),STATE_HASTED)
	  StateCheck(LastSeenBy(Myself),STATE_MIRRORIMAGE)
	  CheckStatGT(LastSeenBy(Myself),0,TRUE_SIGHT)
	  CheckStatGT(LastSeenBy(Myself),0,STONESKINS)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_DEFENSIVE_HARMONY)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_FIRE_SHIELD)
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE5) // Barkskin, Wizard Shield, Wizard Armor, Ghost Armor, Spirit Armor
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE6) // Divine Power, Strength of One, Wizard Strength, Holy Power...
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_DISPEL_MAGIC)
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_DISPEL_MAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!StateCheck(Player4,STATE_NOT_TARGETABLE)
	!StateCheck(Player1,STATE_DISABLED)
	!StateCheck(Player2,STATE_DISABLED)
	!StateCheck(Player3,STATE_DISABLED)
	!StateCheck(Player4,STATE_DISABLED)
	!StateCheck(Player5,STATE_DISABLED)
	!StateCheck(Player6,STATE_DISABLED)
	See(Player4)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL2)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL3)
	OR(11)
	  StateCheck(LastSeenBy(Myself),STATE_HASTED)
	  StateCheck(LastSeenBy(Myself),STATE_MIRRORIMAGE)
	  CheckStatGT(LastSeenBy(Myself),0,TRUE_SIGHT)
	  CheckStatGT(LastSeenBy(Myself),0,STONESKINS)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_DEFENSIVE_HARMONY)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_FIRE_SHIELD)
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE5) // Barkskin, Wizard Shield, Wizard Armor, Ghost Armor, Spirit Armor
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE6) // Divine Power, Strength of One, Wizard Strength, Holy Power...
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_DISPEL_MAGIC)
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_DISPEL_MAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!StateCheck(Player5,STATE_NOT_TARGETABLE)
	!StateCheck(Player1,STATE_DISABLED)
	!StateCheck(Player2,STATE_DISABLED)
	!StateCheck(Player3,STATE_DISABLED)
	!StateCheck(Player4,STATE_DISABLED)
	!StateCheck(Player5,STATE_DISABLED)
	!StateCheck(Player6,STATE_DISABLED)
	See(Player5)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL2)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL3)
	OR(11)
	  StateCheck(LastSeenBy(Myself),STATE_HASTED)
	  StateCheck(LastSeenBy(Myself),STATE_MIRRORIMAGE)
	  CheckStatGT(LastSeenBy(Myself),0,TRUE_SIGHT)
	  CheckStatGT(LastSeenBy(Myself),0,STONESKINS)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_DEFENSIVE_HARMONY)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_FIRE_SHIELD)
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE5) // Barkskin, Wizard Shield, Wizard Armor, Ghost Armor, Spirit Armor
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE6) // Divine Power, Strength of One, Wizard Strength, Holy Power...
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_DISPEL_MAGIC)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_DISPEL_MAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	!StateCheck(Player6,STATE_NOT_TARGETABLE)
	!StateCheck(Player1,STATE_DISABLED)
	!StateCheck(Player2,STATE_DISABLED)
	!StateCheck(Player3,STATE_DISABLED)
	!StateCheck(Player4,STATE_DISABLED)
	!StateCheck(Player5,STATE_DISABLED)
	!StateCheck(Player6,STATE_DISABLED)
	See(Player6)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL2)
	CheckStatLT(LastSeenBy(Myself),14,LEVEL3)
	OR(11)
	  StateCheck(LastSeenBy(Myself),STATE_HASTED)
	  StateCheck(LastSeenBy(Myself),STATE_MIRRORIMAGE)
	  CheckStatGT(LastSeenBy(Myself),0,TRUE_SIGHT)
	  CheckStatGT(LastSeenBy(Myself),0,STONESKINS)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_DEFENSIVE_HARMONY)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	  CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	  CheckStatGT(LastSeenBy(Myself),0,WIZARD_FIRE_SHIELD)
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE5) // Barkskin, Wizard Shield, Wizard Armor, Ghost Armor, Spirit Armor
	  CheckStatGT(LastSeenBy(Myself),0,SCRIPTINGSTATE6) // Divine Power, Strength of One, Wizard Strength, Holy Power...
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_DISPEL_MAGIC)
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_HASTE)
	!StateCheck(Myself,STATE_HASTED)
	Detect([EVILCUTOFF])
	Detect(SecondNearest([EVILCUTOFF]))
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Myself,WIZARD_HASTE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_POWER_WORD_STUN)
	DifficultyGT(EASY)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	HPLT(Player1,90)
	See(Player1)
	!StateCheck(Player1,STATE_NOT_TARGETABLE)
	!StateCheck(Player1,STATE_HARMLESS)
	!CheckStatGT(Player1,0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(Player1,0,WIZARD_SPELL_TURNING)
	!CheckStatGT(Player1,0,WIZARD_SPELL_TRAP)
	!CheckStatGT(Player1,0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(Player1,0,CLERIC_FREE_ACTION)
	!CheckStat(Player1,1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStat(Player1,2,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Conjuration
	!CheckStat(Player1,1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItemEquipedReal("NPSW01",Player1) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",Player1) // Arbane's Sword +2
	!HasItemEquiped("RING09",Player1) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",Player1) // Spider's Bane
	CheckStatLT(Player1,50,RESISTMAGIC)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Player1,WIZARD_POWER_WORD_STUN)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_POWER_WORD_STUN)
	DifficultyGT(EASY)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	HPLT(Player2,90)
	See(Player2)
	!StateCheck(Player2,STATE_NOT_TARGETABLE)
	!StateCheck(Player2,STATE_HARMLESS)
	!CheckStatGT(Player2,0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(Player2,0,WIZARD_SPELL_TURNING)
	!CheckStatGT(Player2,0,WIZARD_SPELL_TRAP)
	!CheckStatGT(Player2,0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(Player2,0,CLERIC_FREE_ACTION)
	!CheckStat(Player2,2,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Conjuration
	!CheckStat(Player2,1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(Player2,1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("NPSW01",Player2) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",Player2) // Arbane's Sword +2
	!HasItemEquiped("RING09",Player2) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",Player2) // Spider's Bane
	CheckStatLT(Player2,50,RESISTMAGIC)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Player2,WIZARD_POWER_WORD_STUN)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_POWER_WORD_STUN)
	DifficultyGT(EASY)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	HPLT(Player3,90)
	See(Player3)
	!StateCheck(Player3,STATE_NOT_TARGETABLE)
	!StateCheck(Player3,STATE_HARMLESS)
	!CheckStatGT(Player3,0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(Player3,0,WIZARD_SPELL_TURNING)
	!CheckStatGT(Player3,0,WIZARD_SPELL_TRAP)
	!CheckStatGT(Player3,0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(Player3,0,CLERIC_FREE_ACTION)
	!CheckStat(Player3,2,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Conjuration
	!CheckStat(Player3,1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(Player3,1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("NPSW01",Player3) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",Player3) // Arbane's Sword +2
	!HasItemEquiped("RING09",Player3) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",Player3) // Spider's Bane
	CheckStatLT(Player3,50,RESISTMAGIC)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Player3,WIZARD_POWER_WORD_STUN)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_POWER_WORD_STUN)
	DifficultyGT(EASY)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	HPLT(Player4,90)
	See(Player4)
	!StateCheck(Player4,STATE_NOT_TARGETABLE)
	!StateCheck(Player4,STATE_HARMLESS)
	!CheckStatGT(Player4,0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(Player4,0,WIZARD_SPELL_TURNING)
	!CheckStatGT(Player4,0,WIZARD_SPELL_TRAP)
	!CheckStatGT(Player4,0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(Player4,0,CLERIC_FREE_ACTION)
	!CheckStat(Player4,2,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Conjuration
	!CheckStat(Player4,1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(Player4,1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("NPSW01",Player4) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",Player4) // Arbane's Sword +2
	!HasItemEquiped("RING09",Player4) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",Player4) // Spider's Bane
	CheckStatLT(Player4,50,RESISTMAGIC)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Player4,WIZARD_POWER_WORD_STUN)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_POWER_WORD_STUN)
	DifficultyGT(EASY)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	HPLT(Player5,90)
	See(Player5)
	!StateCheck(Player5,STATE_NOT_TARGETABLE)
	!StateCheck(Player5,STATE_HARMLESS)
	!CheckStatGT(Player5,0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(Player5,0,WIZARD_SPELL_TURNING)
	!CheckStatGT(Player5,0,WIZARD_SPELL_TRAP)
	!CheckStatGT(Player5,0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(Player5,0,CLERIC_FREE_ACTION)
	!CheckStat(Player5,2,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Conjuration
	!CheckStat(Player5,1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(Player5,1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("NPSW01",Player5) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",Player5) // Arbane's Sword +2
	!HasItemEquiped("RING09",Player5) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",Player5) // Spider's Bane
	CheckStatLT(Player5,50,RESISTMAGIC)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Player5,WIZARD_POWER_WORD_STUN)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_POWER_WORD_STUN)
	DifficultyGT(EASY)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	HPLT(Player6,90)
	See(Player6)
	!StateCheck(Player6,STATE_NOT_TARGETABLE)
	!StateCheck(Player6,STATE_HARMLESS)
	!CheckStatGT(Player6,0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(Player6,0,WIZARD_SPELL_TURNING)
	!CheckStatGT(Player6,0,WIZARD_SPELL_TRAP)
	!CheckStatGT(Player6,0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(Player6,0,CLERIC_FREE_ACTION)
	!CheckStat(Player6,2,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Conjuration
	!CheckStat(Player6,1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(Player6,1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("NPSW01",Player6) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",Player6) // Arbane's Sword +2
	!HasItemEquiped("RING09",Player6) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",Player6) // Spider's Bane
	CheckStatLT(Player6,50,RESISTMAGIC)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(Player6,WIZARD_POWER_WORD_STUN)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_POWER_WORD_STUN)
	DifficultyGT(EASY)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	See([GOODCUTOFF])
	HPLT(LastSeenBy(Myself),90)
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!Name("RR#SHM",LastSeenBy(Myself)) // RR's Shambling Mounds
	CheckStatGT(LastSeenBy(Myself),9,LEVEL)
	!StateCheck(LastSeenBy(Myself),STATE_HARMLESS)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	!CheckStat(LastSeenBy(Myself),2,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Conjuration
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!HasItem("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquipedReal("SW1H27",LastSeenBy(Myself)) // Arbane's Sword +2
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_POWER_WORD_STUN)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_MAGIC_MISSILE)
	DifficultyGT(EASY)
	See(MostDamagedOf([PC]))
	HPLT(LastSeenBy(Myself),26)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!HasItemEquiped("CLCK26",LastSeenBy(Myself)) // Cloak of Mirroring
	!HasItemEquiped("MISC5X",LastSeenBy(Myself)) // Harper Pin
	!HasItemEquiped("MISC73",LastSeenBy(Myself)) // The Horn of Kazgaroth
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!CheckStat(LastSeenBy(Myself),2,SCRIPTINGSTATE5)  // Wizard Shield
	!CheckStat(LastSeenBy(Myself),2,WIZARD_SPELL_TRAP)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStat(LastSeenBy(Myself),6,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Evocation
	CheckStatLT(LastSeenBy(Myself),31,RESISTMAGIC)
	CheckStatLT(LastSeenBy(Myself),31,MAGICDAMAGERESISTANCE)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_MAGIC_MISSILE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_MAGIC_MISSILE)
	See([GOODCUTOFF.0.0.0.0.SUMMONED])
        HasItem("MORSWORD",LastSeenBy(Myself)) // Mordenkainen's Sword
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_MAGIC_MISSILE)
END

IF
	HasItem("POTN14",Myself) // Oil of Speed
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	DifficultyGT(EASY)
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		UseItem("POTN14",Myself) // Oil of Speed
		DisplayStringHead(Myself,46150) //  quaffs a potion
		SetInterrupt(TRUE)
END

IF
	HasItem("POTN41",Myself) // Potion of Power
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	OR(2)
	  !HaveSpell(WIZARD_SLOW)
	  RandomNum(3,1)
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		UseItem("POTN41",Myself) // Potion of Power
		DisplayStringHead(Myself,46150) //  quaffs a potion
		SetInterrupt(TRUE)
END

IF
	!StateCheck(Myself,STATE_INVISIBLE)
	!Global("dvgldust","LOCALS",1)
	HasItem("POTN10",Myself) // Potion of Invisibility
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	OR(2)
	  !HaveSpell(WIZARD_SLOW)
	  RandomNum(3,1)
	!CheckStatGT(Player1,0,TRUE_SIGHT)
	!CheckStatGT(Player2,0,TRUE_SIGHT)
	!CheckStatGT(Player3,0,TRUE_SIGHT)
	!CheckStatGT(Player4,0,TRUE_SIGHT)
	!CheckStatGT(Player5,0,TRUE_SIGHT)
	!CheckStatGT(Player6,0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.PLANATAR],0,TRUE_SIGHT)
	!CheckStatGT([GOODCUTOFF.0.DARKPLANATAR],0,TRUE_SIGHT)
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		UseItem("POTN10",Myself) // Potion of Invisibility
		DisplayStringHead(Myself,46150) //  quaffs a potion
		SetInterrupt(TRUE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SLOW)
	OR(2)
	  !HaveSpell(WIZARD_CHAOS)
	  RandomNum(4,1)
	See([GOODCUTOFF])
	!Class(LastSeenBy(Myself),MONK)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_HARMLESS)
	!StateCheck(LastSeenBy(Myself),STATE_SLOWED)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquiped("NPPLAT",LastSeenBy(Myself)) // Firecam Full Plate Mail +1
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStat(LastSeenBy(Myself),8,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Alteration
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SLOW)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_CHAOS)
	!Difficulty(EASIEST)
	See([GOODCUTOFF])
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!HasItemEquiped("LEAT20",LastSeenBy(Myself)) // Aeger's Hide +3
	!HasItemEquiped("SHLD25",LastSeenBy(Myself)) // Shield of Harmony +2
	!HasItemEquipedReal("SW2H14",LastSeenBy(Myself)) // Lilarcor
	!HasItemEquipedReal("SW1H54",LastSeenBy(Myself)) // The Equalizer
	!HasItemEquipedReal("SW2H21",LastSeenBy(Myself)) // Psion's Blade +5
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_CHAOS)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_CHAOS)
	!Difficulty(EASIEST)
	See(SecondNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!HasItemEquiped("LEAT20",LastSeenBy(Myself)) // Aeger's Hide +3
	!HasItemEquiped("SHLD25",LastSeenBy(Myself)) // Shield of Harmony +2
	!HasItemEquipedReal("SW2H14",LastSeenBy(Myself)) // Lilarcor
	!HasItemEquipedReal("SW1H54",LastSeenBy(Myself)) // The Equalizer
	!HasItemEquipedReal("SW2H21",LastSeenBy(Myself)) // Psion's Blade +5
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_CHAOS)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_CHAOS)
	!Difficulty(EASIEST)
	See(ThirdNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!HasItemEquiped("LEAT20",LastSeenBy(Myself)) // Aeger's Hide +3
	!HasItemEquiped("SHLD25",LastSeenBy(Myself)) // Shield of Harmony +2
	!HasItemEquipedReal("SW2H14",LastSeenBy(Myself)) // Lilarcor
	!HasItemEquipedReal("SW1H54",LastSeenBy(Myself)) // The Equalizer
	!HasItemEquipedReal("SW2H21",LastSeenBy(Myself)) // Psion's Blade +5
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_CHAOS)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_CHAOS)
	!Difficulty(EASIEST)
	See(FourthNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!HasItemEquiped("LEAT20",LastSeenBy(Myself)) // Aeger's Hide +3
	!HasItemEquiped("SHLD25",LastSeenBy(Myself)) // Shield of Harmony +2
	!HasItemEquipedReal("SW2H14",LastSeenBy(Myself)) // Lilarcor
	!HasItemEquipedReal("SW1H54",LastSeenBy(Myself)) // The Equalizer
	!HasItemEquipedReal("SW2H21",LastSeenBy(Myself)) // Psion's Blade +5
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_CHAOS)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_CHAOS)
	!Difficulty(EASIEST)
	See(FifthNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!HasItemEquiped("LEAT20",LastSeenBy(Myself)) // Aeger's Hide +3
	!HasItemEquiped("SHLD25",LastSeenBy(Myself)) // Shield of Harmony +2
	!HasItemEquipedReal("SW2H14",LastSeenBy(Myself)) // Lilarcor
	!HasItemEquipedReal("SW1H54",LastSeenBy(Myself)) // The Equalizer
	!HasItemEquipedReal("SW2H21",LastSeenBy(Myself)) // Psion's Blade +5
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_CHAOS)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_CHAOS)
	!Difficulty(EASIEST)
	See(SixthNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!HasItemEquiped("LEAT20",LastSeenBy(Myself)) // Aeger's Hide +3
	!HasItemEquiped("SHLD25",LastSeenBy(Myself)) // Shield of Harmony +2
	!HasItemEquipedReal("SW2H14",LastSeenBy(Myself)) // Lilarcor
	!HasItemEquipedReal("SW1H54",LastSeenBy(Myself)) // The Equalizer
	!HasItemEquipedReal("SW2H21",LastSeenBy(Myself)) // Psion's Blade +5
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_CHAOS)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SLOW)
	See(SecondNearest([GOODCUTOFF]))
	!Class(LastSeenBy(Myself),MONK)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_HARMLESS)
	!StateCheck(LastSeenBy(Myself),STATE_SLOWED)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquiped("NPPLAT",LastSeenBy(Myself)) // Firecam Full Plate Mail +1
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStat(LastSeenBy(Myself),8,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Alteration
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SLOW)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SLOW)
	See(ThirdNearest([GOODCUTOFF]))
	!Class(LastSeenBy(Myself),MONK)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_HARMLESS)
	!StateCheck(LastSeenBy(Myself),STATE_SLOWED)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquiped("NPPLAT",LastSeenBy(Myself)) // Firecam Full Plate Mail +1
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStat(LastSeenBy(Myself),8,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Alteration
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SLOW)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SLOW)
	See(FourthNearest([GOODCUTOFF]))
	!Class(LastSeenBy(Myself),MONK)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_HARMLESS)
	!StateCheck(LastSeenBy(Myself),STATE_SLOWED)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquiped("NPPLAT",LastSeenBy(Myself)) // Firecam Full Plate Mail +1
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStat(LastSeenBy(Myself),8,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Alteration
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SLOW)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SLOW)
	See(FifthNearest([GOODCUTOFF]))
	!Class(LastSeenBy(Myself),MONK)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_HARMLESS)
	!StateCheck(LastSeenBy(Myself),STATE_SLOWED)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquiped("NPPLAT",LastSeenBy(Myself)) // Firecam Full Plate Mail +1
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStat(LastSeenBy(Myself),8,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Alteration
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SLOW)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SLOW)
	See(SixthNearest([GOODCUTOFF]))
	!Class(LastSeenBy(Myself),MONK)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_HARMLESS)
	!StateCheck(LastSeenBy(Myself),STATE_SLOWED)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!HasItemEquipedReal("NPSW01",LastSeenBy(Myself)) // Sword of Arvoreen
	!HasItemEquiped("RING09",LastSeenBy(Myself)) // Ring of Free Action
	!HasItemEquiped("NPPLAT",LastSeenBy(Myself)) // Firecam Full Plate Mail +1
	!HasItemEquipedReal("SW2H06",LastSeenBy(Myself)) // Spider's Bane
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_FREE_ACTION)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStat(LastSeenBy(Myself),8,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Alteration
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SLOW)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_CONFUSION)
	!Difficulty(EASIEST)
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!HasItemEquiped("LEAT20",LastSeenBy(Myself)) // Aeger's Hide +3
	!HasItemEquiped("SHLD25",LastSeenBy(Myself)) // Shield of Harmony +2
	!HasItemEquipedReal("SW2H14",LastSeenBy(Myself)) // Lilarcor
	!HasItemEquipedReal("SW1H54",LastSeenBy(Myself)) // The Equalizer
	!HasItemEquipedReal("SW2H21",LastSeenBy(Myself)) // Psion's Blade +5
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_CONFUSION)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_CONFUSION)
	See(SecondNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!HasItemEquiped("LEAT20",LastSeenBy(Myself)) // Aeger's Hide +3
	!HasItemEquiped("SHLD25",LastSeenBy(Myself)) // Shield of Harmony +2
	!HasItemEquipedReal("SW2H14",LastSeenBy(Myself)) // Lilarcor
	!HasItemEquipedReal("SW1H54",LastSeenBy(Myself)) // The Equalizer
	!HasItemEquipedReal("SW2H21",LastSeenBy(Myself)) // Psion's Blade +5
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_CONFUSION)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_CONFUSION)
	See(ThirdNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatGT(LastSeenBy(Myself),-4,SAVEVSSPELL)
	!CheckStatGT(LastSeenBy(Myself),0,CLERIC_CHAOTIC_COMMANDS)
	!CheckStat(LastSeenBy(Myself),1,SCRIPTINGSTATE4) // Barbarian Rage, Berserker Enrage
	!CheckStat(LastSeenBy(Myself),4,WIZARD_SPELL_IMMUNITY)  // Spell Immunity: Enchantment
	!HasItemEquiped("LEAT20",LastSeenBy(Myself)) // Aeger's Hide +3
	!HasItemEquiped("SHLD25",LastSeenBy(Myself)) // Shield of Harmony +2
	!HasItemEquipedReal("SW2H14",LastSeenBy(Myself)) // Lilarcor
	!HasItemEquipedReal("SW1H54",LastSeenBy(Myself)) // The Equalizer
	!HasItemEquipedReal("SW2H21",LastSeenBy(Myself)) // Psion's Blade +5
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_CONFUSION)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_FLAME_ARROW)
	See([GOODCUTOFF])
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatLT(LastSeenBy(Myself),55,RESISTFIRE)
	!HasItemEquiped("CLCK26",LastSeenBy(Myself)) // Cloak of Mirroring
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStat(LastSeenBy(Myself),2,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Conjuration
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_FLAME_ARROW)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_FLAME_ARROW)
	See(SecondNearest([GOODCUTOFF]))
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatLT(LastSeenBy(Myself),55,RESISTFIRE)
	!HasItemEquiped("CLCK26",LastSeenBy(Myself)) // Cloak of Mirroring
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStat(LastSeenBy(Myself),2,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Conjuration
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_FLAME_ARROW)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_FLAME_ARROW)
	See(ThirdNearest([GOODCUTOFF]))
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStatLT(LastSeenBy(Myself),55,RESISTFIRE)
	!HasItemEquiped("CLCK26",LastSeenBy(Myself)) // Cloak of Mirroring
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStat(LastSeenBy(Myself),2,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Conjuration
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_FLAME_ARROW)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SPOOK)
	See([GOODCUTOFF])
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSSPELL)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	CheckStatGT(LastSeenBy(Myself),1,MORALEBREAK)
	CheckStat(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("SW1H32",LastSeenBy(Myself)) // Dragonslayer
	!CheckStat(LastSeenBy(Myself),5,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Illusion
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SPOOK)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SPOOK)
	See(SecondNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSSPELL)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	CheckStatGT(LastSeenBy(Myself),1,MORALEBREAK)
	CheckStat(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("SW1H32",LastSeenBy(Myself)) // Dragonslayer
	!CheckStat(LastSeenBy(Myself),5,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Illusion
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SPOOK)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SPOOK)
	See(ThirdNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSSPELL)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	CheckStatGT(LastSeenBy(Myself),1,MORALEBREAK)
	CheckStat(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("SW1H32",LastSeenBy(Myself)) // Dragonslayer
	!CheckStat(LastSeenBy(Myself),5,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Illusion
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SPOOK)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SPOOK)
	See(FourthNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSSPELL)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	CheckStatGT(LastSeenBy(Myself),1,MORALEBREAK)
	CheckStat(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("SW1H32",LastSeenBy(Myself)) // Dragonslayer
	!CheckStat(LastSeenBy(Myself),5,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Illusion
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SPOOK)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SPOOK)
	See(FifthNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSSPELL)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	CheckStatGT(LastSeenBy(Myself),1,MORALEBREAK)
	CheckStat(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("SW1H32",LastSeenBy(Myself)) // Dragonslayer
	!CheckStat(LastSeenBy(Myself),5,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Illusion
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SPOOK)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_SPOOK)
	See(SixthNearest([GOODCUTOFF]))
	!General(LastSeenBy(Myself),UNDEAD)
	!Race(LastSeenBy(Myself),DEMONIC)
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!StateCheck(LastSeenBy(Myself),STATE_DISABLED)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
	CheckStatGT(LastSeenBy(Myself),0,SAVEVSSPELL)
	CheckStatLT(LastSeenBy(Myself),50,RESISTMAGIC)
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	CheckStatGT(LastSeenBy(Myself),1,MORALEBREAK)
	CheckStat(LastSeenBy(Myself),0,WIZARD_RESIST_FEAR)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!HasItemEquipedReal("SW1H32",LastSeenBy(Myself)) // Dragonslayer
	!CheckStat(LastSeenBy(Myself),5,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Illusion
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_SPOOK)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_MAGIC_MISSILE)
	See([GOODCUTOFF])
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!HasItemEquiped("CLCK26",LastSeenBy(Myself)) // Cloak of Mirroring
	!HasItemEquiped("MISC5X",LastSeenBy(Myself)) // Harper Pin
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!CheckStat(LastSeenBy(Myself),2,SCRIPTINGSTATE5)  // Wizard Shield
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStat(LastSeenBy(Myself),6,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Evocation
	CheckStatLT(LastSeenBy(Myself),31,RESISTMAGIC)
	CheckStatLT(LastSeenBy(Myself),31,MAGICDAMAGERESISTANCE)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_MAGIC_MISSILE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_MAGIC_MISSILE)
	See(SecondNearest([GOODCUTOFF]))
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!HasItemEquiped("CLCK26",LastSeenBy(Myself)) // Cloak of Mirroring
	!HasItemEquiped("MISC5X",LastSeenBy(Myself)) // Harper Pin
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!CheckStat(LastSeenBy(Myself),2,SCRIPTINGSTATE5)  // Wizard Shield
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStat(LastSeenBy(Myself),6,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Evocation
	CheckStatLT(LastSeenBy(Myself),31,RESISTMAGIC)
	CheckStatLT(LastSeenBy(Myself),31,MAGICDAMAGERESISTANCE)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_MAGIC_MISSILE)
END

IF
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
	HaveSpell(WIZARD_MAGIC_MISSILE)
	See(ThirdNearest([GOODCUTOFF]))
	!StateCheck(LastSeenBy(Myself),STATE_NOT_TARGETABLE)
	!HasItemEquiped("CLCK26",LastSeenBy(Myself)) // Cloak of Mirroring
	!HasItemEquiped("MISC5X",LastSeenBy(Myself)) // Harper Pin
	CheckStat(LastSeenBy(Myself),0,MINORGLOBE)
	!CheckStat(LastSeenBy(Myself),2,SCRIPTINGSTATE5)  // Wizard Shield
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TRAP)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_DEFLECTION)
	!CheckStatGT(LastSeenBy(Myself),0,WIZARD_SPELL_TURNING)
	!CheckStat(LastSeenBy(Myself),1,CLERIC_SHIELD_OF_THE_ARCHONS)
	!CheckStat(LastSeenBy(Myself),6,WIZARD_SPELL_IMMUNITY) // Spell Immunity: Evocation
	CheckStatLT(LastSeenBy(Myself),31,RESISTMAGIC)
	CheckStatLT(LastSeenBy(Myself),31,MAGICDAMAGERESISTANCE)
	CheckStatLT(Myself,50,SPELLFAILUREMAGE)
	!CheckStatGT(Myself,0,CLERIC_INSECT_PLAGUE)
THEN
	RESPONSE #100
		SetGlobalTimer("RR#Cast","LOCALS",6)
		Spell(LastSeenBy(Myself),WIZARD_MAGIC_MISSILE)
END

IF
	!StateCheck(Myself,STATE_INVISIBLE)
	!Global("dvgldust","LOCALS",1)
	HasItem("POTN10",Myself) // Potion of Invisibility
	!GlobalTimerNotExpired("RR#Cast","LOCALS")
THEN
	RESPONSE #100
		SetInterrupt(FALSE)
		SetGlobalTimer("RR#Cast","LOCALS",6)
		UseItem("POTN10",Myself) // Potion of Invisibility
		DisplayStringHead(Myself,46150) //  quaffs a potion
		SetInterrupt(TRUE)
END

IF
	!Global("RR#Heal","LOCALS",1)
	Global("RR#Active","LOCALS",1)
	!See([GOODCUTOFF])
	Detect([GOODCUTOFF])
	!ModalState(DETECTTRAPS)
THEN
	RESPONSE #100
		FindTraps()
END

IF
	!Global("RR#Heal","LOCALS",1)
	Global("RR#Active","LOCALS",1)
	!ModalState(DETECTTRAPS)
	OR(4)
	  See([GOODCUTOFF.0.0.0.0.ILLUSIONARY.0]) // illusionary clones such as Mislead or Project Image
	  StateCheck([GOODCUTOFF],STATE_ILLUSIONS)
          StateCheck(SecondNearest([GOODCUTOFF]),STATE_ILLUSIONS)
          StateCheck(ThirdNearest([GOODCUTOFF]),STATE_ILLUSIONS)
THEN
	RESPONSE #100
		FindTraps()
END

IF
	!Global("RR#Heal","LOCALS",1)
	Global("RR#Active","LOCALS",1)
	ModalState(DETECTTRAPS)
	!GlobalTimerNotExpired("RR#DI","LOCALS")
THEN
	RESPONSE #100
		SetGlobalTimer("RR#DI","LOCALS",6)
		DisplayStringHead(Myself,@709) // attempts to detect illusions
		Continue()
END

IF
	Global("RR#Heal","LOCALS",0)
	Global("RR#Active","LOCALS",1)
	!Detect([GOODCUTOFF])
	InMyArea(Player1)
	!StateCheck(Myself,STATE_BLIND)
	OR(2)
	  RandomNum(5,1)
	  CombatCounter(0)
THEN
	RESPONSE #100
		MoveToObject(Player1)
END

IF
	!Global("RR#Heal","LOCALS",1)
	Global("RR#Active","LOCALS",1)
	!See([GOODCUTOFF])
	RandomNum(2,1)
THEN
	RESPONSE #100
		RandomWalkContinuous()
END

IF
	See([GOODCUTOFF])
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(SixthNearest([GOODCUTOFF]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(SixthNearest([GOODCUTOFF]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(SixthNearest([GOODCUTOFF]),1,STONESKINS)
	CheckStatLT(SixthNearest([GOODCUTOFF]),100,RESISTPIERCING)
	!StateCheck(SixthNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
	!StateCheck(SixthNearest([GOODCUTOFF]),STATE_PANIC)
	!CheckStatGT(SixthNearest([GOODCUTOFF]),0,175)  // no Backstab immunity
	!Kit(SixthNearest([GOODCUTOFF]),BARBARIAN)
	See(SixthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(FifthNearest([GOODCUTOFF]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(FifthNearest([GOODCUTOFF]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(FifthNearest([GOODCUTOFF]),1,STONESKINS)
	CheckStatLT(FifthNearest([GOODCUTOFF]),100,RESISTPIERCING)
	!StateCheck(FifthNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
	!StateCheck(FifthNearest([GOODCUTOFF]),STATE_PANIC)
	!CheckStatGT(FifthNearest([GOODCUTOFF]),0,175)  // no Backstab immunity
	!Kit(FifthNearest([GOODCUTOFF]),BARBARIAN)
	See(FifthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(FourthNearest([GOODCUTOFF]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(FourthNearest([GOODCUTOFF]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(FourthNearest([GOODCUTOFF]),1,STONESKINS)
	CheckStatLT(FourthNearest([GOODCUTOFF]),100,RESISTPIERCING)
	!StateCheck(FourthNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
	!StateCheck(FourthNearest([GOODCUTOFF]),STATE_PANIC)
	!CheckStatGT(FourthNearest([GOODCUTOFF]),0,175)  // no Backstab immunity
	!Kit(FourthNearest([GOODCUTOFF]),BARBARIAN)
	See(FourthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(ThirdNearest([GOODCUTOFF]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(ThirdNearest([GOODCUTOFF]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(ThirdNearest([GOODCUTOFF]),1,STONESKINS)
	CheckStatLT(ThirdNearest([GOODCUTOFF]),100,RESISTPIERCING)
	!StateCheck(ThirdNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
	!StateCheck(ThirdNearest([GOODCUTOFF]),STATE_PANIC)
	!CheckStatGT(ThirdNearest([GOODCUTOFF]),0,175)  // no Backstab immunity
	!Kit(ThirdNearest([GOODCUTOFF]),BARBARIAN)
	See(ThirdNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(SecondNearest([GOODCUTOFF]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(SecondNearest([GOODCUTOFF]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(SecondNearest([GOODCUTOFF]),1,STONESKINS)
	CheckStatLT(SecondNearest([GOODCUTOFF]),100,RESISTPIERCING)
	!StateCheck(SecondNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
	!StateCheck(SecondNearest([GOODCUTOFF]),STATE_PANIC)
	!CheckStatGT(SecondNearest([GOODCUTOFF]),0,175)  // no Backstab immunity
	!Kit(SecondNearest([GOODCUTOFF]),BARBARIAN)
	See(SecondNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat([GOODCUTOFF],3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat([GOODCUTOFF],2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT([GOODCUTOFF],1,STONESKINS)
	CheckStatLT([GOODCUTOFF],100,RESISTPIERCING)
	!StateCheck([GOODCUTOFF],STATE_MIRRORIMAGE)
	!StateCheck([GOODCUTOFF],STATE_PANIC)
	!CheckStatGT([GOODCUTOFF],0,175)  // no Backstab immunity
	!Kit([GOODCUTOFF],BARBARIAN)
	See([GOODCUTOFF])
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(SecondNearest([GOODCUTOFF.0.0.BARD_ALL]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(SecondNearest([GOODCUTOFF.0.0.BARD_ALL]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(SecondNearest([GOODCUTOFF.0.0.BARD_ALL]),1,STONESKINS)
	CheckStatLT(SecondNearest([GOODCUTOFF.0.0.BARD_ALL]),100,RESISTPIERCING)
	!StateCheck(SecondNearest([GOODCUTOFF.0.0.BARD_ALL]),STATE_MIRRORIMAGE)
	!StateCheck(SecondNearest([GOODCUTOFF.0.0.BARD_ALL]),STATE_PANIC)
	!CheckStatGT(SecondNearest([GOODCUTOFF.0.0.BARD_ALL]),0,175)  // no Backstab immunity
	OR(2)
	  StateCheck(Myself,STATE_INVISIBLE)
	  InWeaponRange(SecondNearest([GOODCUTOFF.0.0.BARD_ALL]))
	See(SecondNearest([GOODCUTOFF.0.0.BARD_ALL]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat([GOODCUTOFF.0.0.BARD_ALL],3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat([GOODCUTOFF.0.0.BARD_ALL],2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT([GOODCUTOFF.0.0.BARD_ALL],1,STONESKINS)
	CheckStatLT([GOODCUTOFF.0.0.BARD_ALL],100,RESISTPIERCING)
	!StateCheck([GOODCUTOFF.0.0.BARD_ALL],STATE_MIRRORIMAGE)
	!StateCheck([GOODCUTOFF.0.0.BARD_ALL],STATE_PANIC)
	!CheckStatGT([GOODCUTOFF.0.0.BARD_ALL],0,175)  // no Backstab immunity
	OR(2)
	  StateCheck(Myself,STATE_INVISIBLE)
	  InWeaponRange([GOODCUTOFF.0.0.BARD_ALL])
	See([GOODCUTOFF.0.0.BARD_ALL])
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),1,STONESKINS)
	CheckStatLT(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),100,RESISTPIERCING)
	!StateCheck(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),STATE_MIRRORIMAGE)
	!StateCheck(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),STATE_PANIC)
	!CheckStatGT(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),0,175)  // no Backstab immunity
	OR(2)
	  StateCheck(Myself,STATE_INVISIBLE)
	  InWeaponRange(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]))
	See(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),1,STONESKINS)
	CheckStatLT(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),100,RESISTPIERCING)
	!StateCheck(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),STATE_MIRRORIMAGE)
	!StateCheck(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),STATE_PANIC)
	!CheckStatGT(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),0,175)  // no Backstab immunity
	OR(2)
	  StateCheck(Myself,STATE_INVISIBLE)
	  InWeaponRange(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]))
	See(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat([GOODCUTOFF.0.0.MAGE_ALL],3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat([GOODCUTOFF.0.0.MAGE_ALL],2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT([GOODCUTOFF.0.0.MAGE_ALL],1,STONESKINS)
	CheckStatLT([GOODCUTOFF.0.0.MAGE_ALL],100,RESISTPIERCING)
	!StateCheck([GOODCUTOFF.0.0.MAGE_ALL],STATE_MIRRORIMAGE)
	!StateCheck([GOODCUTOFF.0.0.MAGE_ALL],STATE_PANIC)
	!CheckStatGT([GOODCUTOFF.0.0.MAGE_ALL],0,175)  // no Backstab immunity
	OR(2)
	  StateCheck(Myself,STATE_INVISIBLE)
	  InWeaponRange([GOODCUTOFF.0.0.MAGE_ALL])
	See([GOODCUTOFF.0.0.MAGE_ALL])
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	HitBy([ANYONE],CRUSHING) // hit by any damage type
	!CheckStat(LastHitter(Myself),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(LastHitter(Myself),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(LastHitter(Myself),1,STONESKINS)
	CheckStatLT(LastHitter(Myself),100,RESISTPIERCING)
	!StateCheck(LastHitter(Myself),STATE_MIRRORIMAGE)
	!StateCheck(LastHitter(Myself),STATE_PANIC)
	!CheckStatGT(LastHitter(Myself),0,175)  // no Backstab immunity
	!StateCheck(Myself,STATE_INVISIBLE) // don't retaliate while invisible (might waste a backstab)
	OR(2)
	  InWeaponRange(LastHitter(Myself))
          RandomNum(4,1)
	See(LastHitter(Myself))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(SixthNearest([GOODCUTOFF]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(SixthNearest([GOODCUTOFF]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(SixthNearest([GOODCUTOFF]),1,STONESKINS)
	CheckStatLT(SixthNearest([GOODCUTOFF]),100,RESISTPIERCING)
	!StateCheck(SixthNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
	StateCheck(SixthNearest([GOODCUTOFF]),STATE_IMMOBILE)
	!CheckStatGT(SixthNearest([GOODCUTOFF]),0,175)  // no Backstab immunity
	!Kit(SixthNearest([GOODCUTOFF]),BARBARIAN)
	See(SixthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(FifthNearest([GOODCUTOFF]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(FifthNearest([GOODCUTOFF]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(FifthNearest([GOODCUTOFF]),1,STONESKINS)
	CheckStatLT(FifthNearest([GOODCUTOFF]),100,RESISTPIERCING)
	!StateCheck(FifthNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
	StateCheck(FifthNearest([GOODCUTOFF]),STATE_IMMOBILE)
	!CheckStatGT(FifthNearest([GOODCUTOFF]),0,175)  // no Backstab immunity
	!Kit(FifthNearest([GOODCUTOFF]),BARBARIAN)
	See(FifthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(FourthNearest([GOODCUTOFF]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(FourthNearest([GOODCUTOFF]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(FourthNearest([GOODCUTOFF]),1,STONESKINS)
	CheckStatLT(FourthNearest([GOODCUTOFF]),100,RESISTPIERCING)
	!StateCheck(FourthNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
	StateCheck(FourthNearest([GOODCUTOFF]),STATE_IMMOBILE)
	!CheckStatGT(FourthNearest([GOODCUTOFF]),0,175)  // no Backstab immunity
	!Kit(FourthNearest([GOODCUTOFF]),BARBARIAN)
	See(FourthNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(ThirdNearest([GOODCUTOFF]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(ThirdNearest([GOODCUTOFF]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(ThirdNearest([GOODCUTOFF]),1,STONESKINS)
	CheckStatLT(ThirdNearest([GOODCUTOFF]),100,RESISTPIERCING)
	!StateCheck(ThirdNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
	StateCheck(ThirdNearest([GOODCUTOFF]),STATE_IMMOBILE)
	!CheckStatGT(ThirdNearest([GOODCUTOFF]),0,175)  // no Backstab immunity
	!Kit(ThirdNearest([GOODCUTOFF]),BARBARIAN)
	See(ThirdNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(SecondNearest([GOODCUTOFF]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(SecondNearest([GOODCUTOFF]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(SecondNearest([GOODCUTOFF]),1,STONESKINS)
	CheckStatLT(SecondNearest([GOODCUTOFF]),100,RESISTPIERCING)
	!StateCheck(SecondNearest([GOODCUTOFF]),STATE_MIRRORIMAGE)
	StateCheck(SecondNearest([GOODCUTOFF]),STATE_IMMOBILE)
	!CheckStatGT(SecondNearest([GOODCUTOFF]),0,175)  // no Backstab immunity
	!Kit(SecondNearest([GOODCUTOFF]),BARBARIAN)
	See(SecondNearest([GOODCUTOFF]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat([GOODCUTOFF],3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat([GOODCUTOFF],2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT([GOODCUTOFF],1,STONESKINS)
	CheckStatLT([GOODCUTOFF],100,RESISTPIERCING)
	!StateCheck([GOODCUTOFF],STATE_MIRRORIMAGE)
	StateCheck([GOODCUTOFF],STATE_IMMOBILE)
	!CheckStatGT([GOODCUTOFF],0,175)  // no Backstab immunity
	!Kit([GOODCUTOFF],BARBARIAN)
	See([GOODCUTOFF])
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),1,STONESKINS)
	CheckStatLT(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),100,RESISTPIERCING)
	!StateCheck(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),STATE_MIRRORIMAGE)
	StateCheck(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),STATE_IMMOBILE)
	!CheckStatGT(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]),0,175)  // no Backstab immunity
	See(ThirdNearest([GOODCUTOFF.0.0.MAGE_ALL]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),1,STONESKINS)
	CheckStatLT(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),100,RESISTPIERCING)
	!StateCheck(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),STATE_MIRRORIMAGE)
	StateCheck(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),STATE_IMMOBILE)
	!CheckStatGT(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]),0,175)  // no Backstab immunity
	See(SecondNearest([GOODCUTOFF.0.0.MAGE_ALL]))
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	!CheckStat([GOODCUTOFF.0.0.MAGE_ALL],3,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Absolute Immunity
	!CheckStat([GOODCUTOFF.0.0.MAGE_ALL],2,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // no Improved Mantle
	CheckStatLT([GOODCUTOFF.0.0.MAGE_ALL],1,STONESKINS)
	CheckStatLT([GOODCUTOFF.0.0.MAGE_ALL],100,RESISTPIERCING)
	!StateCheck([GOODCUTOFF.0.0.MAGE_ALL],STATE_MIRRORIMAGE)
	StateCheck([GOODCUTOFF.0.0.MAGE_ALL],STATE_IMMOBILE)
	!CheckStatGT([GOODCUTOFF.0.0.MAGE_ALL],0,175)  // no Backstab immunity
	See([GOODCUTOFF.0.0.MAGE_ALL])
	False()
THEN
	RESPONSE #100
		Continue()
END

IF
	CheckStat(LastSeenBy(Myself),4,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // target is under the effects of PfMW
	!HasItemEquipedReal("SW1H07",Myself)  // Short Sword (non-enchanted)
THEN
	RESPONSE #100
		SelectWeaponAbility(SLOT_WEAPON1,0)  // equip the non-enchanted shortsword for dealing with PfMW
		Continue()
END

IF
	!CheckStat(LastSeenBy(Myself),4,WIZARD_PROTECTION_FROM_MAGIC_WEAPONS)  // target is not under the effects of PfMW
	!HasItemEquipedReal("SW1H10",Myself)  // Short Sword of Backstabbing
THEN
	RESPONSE #100
		SelectWeaponAbility(SLOT_WEAPON,0)  // equip the Short Sword of Backstabbing
		Continue()
END

IF
	Global("RR#Heal","LOCALS",0)
        GlobalGT("RR#ZProt","LOCALS",0)
	!GlobalTimerNotExpired("RR#ZBuff","LOCALS")
	!StateCheck(LastSeenBy(Myself),STATE_INVISIBLE)
	!Allegiance(LastSeenBy(Myself),EVILCUTOFF)
THEN
	RESPONSE #100
		AttackReevaluate(LastSeenBy(Myself),30)
END

IF
	Global("RR#Heal","LOCALS",1)
	GlobalTimerNotExpired("RR#Cast","LOCALS")
	See([GOODCUTOFF])
THEN
	RESPONSE #100
		RandomWalkContinuous()
END

IF
	Global("RR#Heal","LOCALS",0)
	GlobalTimerNotExpired("RR#Cast","LOCALS")
THEN
	RESPONSE #100
		RandomWalkContinuous()
END